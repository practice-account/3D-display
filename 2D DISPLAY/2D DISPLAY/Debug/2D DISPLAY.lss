
2D DISPLAY.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000128  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000017c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000017c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001ac  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  000001e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000703  00000000  00000000  00000210  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000603  00000000  00000000  00000913  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000270  00000000  00000000  00000f16  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00001188  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000033f  00000000  00000000  000011bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001ba  00000000  00000000  000014fb  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  000016b5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 7c 00 	call	0xf8	; 0xf8 <main>
  64:	0c 94 92 00 	jmp	0x124	; 0x124 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <light>:
		 a=x%2;
		 d=y%2;
		 y=y/2;
		 c=y%2;
		 
		 PORTA=(a<<PA0)|(b<<PA1)|(c<<PA2)|(d<<PA3);
  6c:	9c 01       	movw	r18, r24
  6e:	21 70       	andi	r18, 0x01	; 1
  70:	30 78       	andi	r19, 0x80	; 128
  72:	33 23       	and	r19, r19
  74:	34 f4       	brge	.+12     	; 0x82 <light+0x16>
  76:	21 50       	subi	r18, 0x01	; 1
  78:	31 09       	sbc	r19, r1
  7a:	2e 6f       	ori	r18, 0xFE	; 254
  7c:	3f 6f       	ori	r19, 0xFF	; 255
  7e:	2f 5f       	subi	r18, 0xFF	; 255
  80:	3f 4f       	sbci	r19, 0xFF	; 255
  82:	a9 01       	movw	r20, r18
  84:	44 0f       	add	r20, r20
  86:	55 1f       	adc	r21, r21
  88:	9c 01       	movw	r18, r24
  8a:	99 23       	and	r25, r25
  8c:	14 f4       	brge	.+4      	; 0x92 <light+0x26>
  8e:	2f 5f       	subi	r18, 0xFF	; 255
  90:	3f 4f       	sbci	r19, 0xFF	; 255
  92:	35 95       	asr	r19
  94:	27 95       	ror	r18
  96:	c9 01       	movw	r24, r18
  98:	81 70       	andi	r24, 0x01	; 1
  9a:	90 78       	andi	r25, 0x80	; 128
  9c:	99 23       	and	r25, r25
  9e:	24 f4       	brge	.+8      	; 0xa8 <light+0x3c>
  a0:	01 97       	sbiw	r24, 0x01	; 1
  a2:	8e 6f       	ori	r24, 0xFE	; 254
  a4:	9f 6f       	ori	r25, 0xFF	; 255
  a6:	01 96       	adiw	r24, 0x01	; 1
  a8:	84 2b       	or	r24, r20
  aa:	9b 01       	movw	r18, r22
  ac:	21 70       	andi	r18, 0x01	; 1
  ae:	30 78       	andi	r19, 0x80	; 128
  b0:	33 23       	and	r19, r19
  b2:	34 f4       	brge	.+12     	; 0xc0 <light+0x54>
  b4:	21 50       	subi	r18, 0x01	; 1
  b6:	31 09       	sbc	r19, r1
  b8:	2e 6f       	ori	r18, 0xFE	; 254
  ba:	3f 6f       	ori	r19, 0xFF	; 255
  bc:	2f 5f       	subi	r18, 0xFF	; 255
  be:	3f 4f       	sbci	r19, 0xFF	; 255
  c0:	22 0f       	add	r18, r18
  c2:	33 1f       	adc	r19, r19
  c4:	22 0f       	add	r18, r18
  c6:	33 1f       	adc	r19, r19
  c8:	22 0f       	add	r18, r18
  ca:	33 1f       	adc	r19, r19
  cc:	28 2b       	or	r18, r24
  ce:	cb 01       	movw	r24, r22
  d0:	99 23       	and	r25, r25
  d2:	0c f4       	brge	.+2      	; 0xd6 <light+0x6a>
  d4:	01 96       	adiw	r24, 0x01	; 1
  d6:	95 95       	asr	r25
  d8:	87 95       	ror	r24
  da:	81 70       	andi	r24, 0x01	; 1
  dc:	90 78       	andi	r25, 0x80	; 128
  de:	99 23       	and	r25, r25
  e0:	24 f4       	brge	.+8      	; 0xea <light+0x7e>
  e2:	01 97       	sbiw	r24, 0x01	; 1
  e4:	8e 6f       	ori	r24, 0xFE	; 254
  e6:	9f 6f       	ori	r25, 0xFF	; 255
  e8:	01 96       	adiw	r24, 0x01	; 1
  ea:	88 0f       	add	r24, r24
  ec:	99 1f       	adc	r25, r25
  ee:	88 0f       	add	r24, r24
  f0:	99 1f       	adc	r25, r25
  f2:	82 2b       	or	r24, r18
  f4:	8b bb       	out	0x1b, r24	; 27
  f6:	08 95       	ret

000000f8 <main>:
}


int main(void)
{
    DDRA=0xFF;
  f8:	8f ef       	ldi	r24, 0xFF	; 255
  fa:	8a bb       	out	0x1a, r24	; 26
    while (1) 
    { 
    for(int i=0;i<4;i++){
  fc:	00 e0       	ldi	r16, 0x00	; 0
  fe:	10 e0       	ldi	r17, 0x00	; 0
 100:	0e c0       	rjmp	.+28     	; 0x11e <main+0x26>

        for(int j=0;j<4;j++){

        light(i,j);
 102:	be 01       	movw	r22, r28
 104:	c8 01       	movw	r24, r16
 106:	0e 94 36 00 	call	0x6c	; 0x6c <light>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 10a:	00 c0       	rjmp	.+0      	; 0x10c <main+0x14>
    DDRA=0xFF;
    while (1) 
    { 
    for(int i=0;i<4;i++){

        for(int j=0;j<4;j++){
 10c:	21 96       	adiw	r28, 0x01	; 1
 10e:	c4 30       	cpi	r28, 0x04	; 4
 110:	d1 05       	cpc	r29, r1
 112:	b9 f7       	brne	.-18     	; 0x102 <main+0xa>
int main(void)
{
    DDRA=0xFF;
    while (1) 
    { 
    for(int i=0;i<4;i++){
 114:	0f 5f       	subi	r16, 0xFF	; 255
 116:	1f 4f       	sbci	r17, 0xFF	; 255
 118:	04 30       	cpi	r16, 0x04	; 4
 11a:	11 05       	cpc	r17, r1
 11c:	79 f3       	breq	.-34     	; 0xfc <main+0x4>
	
}


int main(void)
{
 11e:	c0 e0       	ldi	r28, 0x00	; 0
 120:	d0 e0       	ldi	r29, 0x00	; 0
 122:	ef cf       	rjmp	.-34     	; 0x102 <main+0xa>

00000124 <_exit>:
 124:	f8 94       	cli

00000126 <__stop_program>:
 126:	ff cf       	rjmp	.-2      	; 0x126 <__stop_program>
